# -*- coding: utf-8 -*-
"""Power_method.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/136s-6v5Yj8rlnsdT-BHC2vrX_xXz8SPO
"""

import numpy as np

def get_dominant_eigenvalue_and_eigenvector(data, num_steps):
    # Инициализация случайного начального вектора
    vec = np.random.rand(data.shape[1])
    vec = vec / np.linalg.norm(vec)  # Нормализация

    for _ in range(num_steps):
        vec = np.dot(data, vec)  # Умножаем на матрицу
        vec = vec / np.linalg.norm(vec)  # Нормализация

    # Вычисление собственного значения по Rayleigh Quotient
    eigenvalue = np.dot(vec, np.dot(data, vec)) / np.dot(vec, vec)

    return eigenvalue, vec

## Тестирование на синтетических данных
#data = np.array([[1, 0], [0, 1]])
#eigenvalue, eigenvector = get_dominant_eigenvalue_and_eigenvector(data, 100)
#print("Eigenvalue:", eigenvalue)
##print("Eigenvector:", eigenvector)

